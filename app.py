import json
import logging
from flask import Flask, render_template, request, jsonify

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API
logging.basicConfig(filename='logs/api.log', level=logging.INFO, format='%(asctime)s [%(levelname)s] %(message)s')

# –°–æ–∑–¥–∞—ë–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –¥–∞–Ω–Ω—ã—Ö
POSTS_FILE = "data/data.json"
COMMENTS_FILE = "data/comments.json"
BOOKMARKS_FILE = "data/bookmarks.json"


# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ JSON
def load_json(file_path):
    with open(file_path, encoding="utf-8") as file:
        return json.load(file)


# –§—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
def get_posts_all():
    return load_json(POSTS_FILE)


def get_comments_all():
    return load_json(COMMENTS_FILE)


def get_posts_by_user(user_name):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
    posts = get_posts_all()

    # –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_posts = []

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã –ø–æ –æ–¥–Ω–æ–º—É
    for post in posts:
        # –ü—Ä–∏–≤–æ–¥–∏–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º
        if post["poster_name"].lower() == user_name.lower():
            user_posts.append(post)  # –ï—Å–ª–∏ —Å–æ–≤–ø–∞–ª–æ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ —Å–ø–∏—Å–æ–∫

    # –ï—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ user_posts –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    if len(user_posts) == 0:
        raise ValueError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return user_posts


def get_comments_by_post_id(post_id):
    comments = get_comments_all()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    result = []  # –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –Ω—É–∂–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    for comment in comments:  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        if comment["post_id"] == post_id:  # –ï—Å–ª–∏ ID –ø–æ—Å—Ç–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç
            result.append(comment)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
    return result  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤


def search_for_posts(query):
    posts = get_posts_all()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
    result = []  # –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
    for post in posts:  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
        if query.lower() in post["content"].lower():  # –ï—Å–ª–∏ —Å–ª–æ–≤–æ –µ—Å—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ
            result.append(post)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ —Å–ø–∏—Å–æ–∫
    return result  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤


def get_post_by_pk(pk):
    posts = get_posts_all()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
    for post in posts:  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç
        if post["pk"] == pk:  # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–¥–∞–µ—Ç
            return post  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —ç—Ç–æ—Ç –ø–æ—Å—Ç
    return None  # –ï—Å–ª–∏ –ø–æ—Å—Ç–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None


# –ú–∞—Ä—à—Ä—É—Ç—ã Flask
@app.route('/')
def index():
    posts = get_posts_all()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤
    return render_template('index.html', posts=posts)  # –ü–µ—Ä–µ–¥–∞—ë–º –≤ —à–∞–±–ª–æ–Ω


@app.route('/posts/<int:post_id>')
def post_detail(post_id):
    post = get_post_by_pk(post_id)  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç –ø–æ ID
    if not post:
        return "–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    comments = get_comments_by_post_id(post_id)  # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ—Å—Ç—É
    return render_template('post.html', post=post, comments=comments)


@app.route('/search')
def search():
    query = request.args.get('s', '')
    if not query:
        return render_template('search.html', posts=[], query=query)
    results = search_for_posts(query)[:10]
    return render_template('search.html', posts=results, query=query)


@app.route('/users/<user_name>')
def user_posts(user_name):
    try:
        posts = get_posts_by_user(user_name)
        return render_template('user-feed.html', posts=posts, user_name=user_name)
    except ValueError:
        return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", 404


@app.route('/api/posts')
def api_posts():
    logging.info("–ó–∞–ø—Ä–æ—Å /api/posts")
    return jsonify(get_posts_all())


@app.route('/api/posts/<int:post_id>')
def api_post(post_id):
    logging.info(f"–ó–∞–ø—Ä–æ—Å /api/posts/{post_id}")
    post = get_post_by_pk(post_id)
    if not post:
        return jsonify({"error": "–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"}), 404
    return jsonify(post)


@app.errorhandler(404)
def not_found_error(error):
    return "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", 404


@app.errorhandler(500)
def server_error(error):
    return "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", 500


if __name__ == '__main__':
    import os

    print("\nüî• Flask –∑–∞–ø—É—â–µ–Ω! –û—Ç–∫—Ä–æ–π –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://127.0.0.1:5000/ üî•\n")
    os.system("python -m flask run --host=127.0.0.1 --port=5000")
